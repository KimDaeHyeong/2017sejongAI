import numpy as np
from sklearn import preprocessing

input_data = np.array([[5.1, -2.9, 3.3],
 [-1.2, 7.8, -6.1],
 [3.9, 0.4, 2.1],
 [7.3, -9.9, -4.5]])

data_binarized = preprocessing.Binarizer(threshold=2.1).transform(input_data)
print("\nBinarized data : \n", data_binarized)

print("\n BEFORE : ")
print("Mean = ", input_data.mean(axis=0))
print("Std deviation = ", input_data.std(axis=0)) 


data_scaed = preprocessing.scale(input_data)
print("\n AFTER : ")
print("Mean = ", data_scaed.mean(axis=0))
print("Std deviation = ", data_scaed.std(axis=0))

data_scaler_minmax = preprocessing.MinMaxScaler(feature_range=(0,1))
data_scaled_minmax = data_scaler_minmax.fit_transform(input_data)
print("\nMin max scaled data : \n", data_scaled_minmax)

data_normalized_l1 = preprocessing.normalize(input_data, norm='l1')

data_normalized_l2 = preprocessing.normalize(input_data, norm='l2')
print("\nL1 normalized data : \n", data_normalized_l1)
print("\nL1 normalized data : \n", data_normalized_l2) 


from PIL import Image
import numpy as np 

def average_hash(fname, size = 16):
   img = Image.open(fname)
   img = img.convert('L')
   img = img.resize((size, size), Image.ANTIALIAS)
   pixel_data = img.getdata()
   pixels = np.array(pixel_data)
   pixels = pixels.reshape((size, size))
   avg = pixels.mean()
   diff = 1*(pixels>avg)
   print(diff)
   return diff

def np2hash(n):
   bhash = []
   for n1 in ahash.tolist():
      s1 = [str(i) for i in n1]
      s2 = "".join(s1)
      i = int(s2,2)
      bhash.append("%04x"%i)
   return "".join(bhash)

ahash = average_hash('basketball.jpg')
print(ahash)
print(np2hash(ahash))
